docker network rm jysk.netic.dk
docker network rm is.matas.dk
docker network create is.matas.dk --subnet=172.19.0.0/16
--
docker stop dev-db
docker rm dev-db

docker stop dev-db-ms
docker rm dev-db-ms
--

docker run -p 1433:1433 --name dev-db-ms-510 --network is.matas.dk -e ACCEPT_EULA=Y -e SA_PASSWORD=R1o2o3t4 -d mcr.microsoft.com/mssql/server:2019-latest
sleep 5

docker exec dev-db-ms-510 mkdir usr/dbscripts
docker cp ~/work/wso2/matas/git/ansible-is-master/files/dbscripts/5.10.0/mssql.sql dev-db-ms-510:usr/dbscripts/shared.sql
docker cp ~/work/wso2/matas/git/ansible-is-master/files/dbscripts/5.10.0/bps/bpel/create/mssql.sql dev-db-ms-510:usr/dbscripts/bps.sql
docker cp ~/work/wso2/matas/git/ansible-is-master/files/dbscripts/5.10.0/identity/mssql.sql dev-db-ms-510:usr/dbscripts/identity.sql
docker cp ~/work/wso2/matas/git/ansible-is-master/files/dbscripts/5.10.0/consent/mssql.sql dev-db-ms-510:usr/dbscripts/consent.sql

sleep 5
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "CREATE DATABASE WSO2SHARED_DB"
sleep 2
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "CREATE DATABASE WSO2CONSENT_DB"
sleep 2
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "CREATE DATABASE WSO2IDENTITY_DB"
sleep 2
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "CREATE DATABASE WSO2BPS_DB"
sleep 2
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "CREATE DATABASE MATAS"
sleep 2

docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "CREATE LOGIN wso2_shared_user WITH PASSWORD='jfewWER#6few'"
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "CREATE LOGIN wso2_consent_user WITH PASSWORD='jfewWER#6few'"
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "CREATE LOGIN wso2_identity_user WITH PASSWORD='jfewWER#6few'"
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "CREATE LOGIN wso2_bps_user WITH PASSWORD='jfewWER#6few'"

docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "USE WSO2SHARED_DB; CREATE USER wso2_shared_user for LOGIN wso2_shared_user; GRANT CONTROL ON SCHEMA::dbo TO wso2_shared_user; GRANT CONTROL ON DATABASE::WSO2SHARED_DB TO wso2_shared_user;"
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "USE MATAS; CREATE USER wso2_shared_user for LOGIN wso2_shared_user; GRANT CONTROL ON SCHEMA::dbo TO wso2_shared_user; GRANT CONTROL ON DATABASE::MATAS TO wso2_shared_user;"
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "USE WSO2CONSENT_DB; CREATE USER wso2_consent_user for LOGIN wso2_consent_user; GRANT CONTROL ON SCHEMA::dbo TO wso2_consent_user; GRANT CONTROL ON DATABASE::WSO2CONSENT_DB TO wso2_consent_user;"
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "USE WSO2IDENTITY_DB; CREATE USER wso2_identity_user for LOGIN wso2_identity_user; GRANT CONTROL ON SCHEMA::dbo TO wso2_identity_user; GRANT CONTROL ON DATABASE::WSO2IDENTITY_DB TO wso2_identity_user;"
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P R1o2o3t4 -Q "USE WSO2BPS_DB; CREATE USER wso2_bps_user for LOGIN wso2_bps_user; GRANT CONTROL ON SCHEMA::dbo TO wso2_bps_user; GRANT CONTROL ON DATABASE::WSO2BPS_DB TO wso2_bps_user;"

docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U wso2_shared_user -P jfewWER#6few -d WSO2SHARED_DB -i "usr/dbscripts/shared.sql"
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U wso2_bps_user -P jfewWER#6few -d WSO2BPS_DB -i "usr/dbscripts/bps.sql"
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U wso2_consent_user -P jfewWER#6few -d WSO2CONSENT_DB -i "usr/dbscripts/consent.sql"
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U wso2_identity_user -P jfewWER#6few -d WSO2IDENTITY_DB -i "usr/dbscripts/identity.sql"
docker exec dev-db-ms-510 /opt/mssql-tools/bin/sqlcmd -S localhost -U wso2_shared_user -P jfewWER#6few -d MATAS -i "usr/dbscripts/shared.sql"











ansible-playbook -i inventory/dev site.yml --skip-tags "service_restart,java_install,wso2_install" --limit "is_1" --extra-vars "ansible_ssh_pass=root ansible_ssh_user=root ansible_sudo_pass=root" --vault-id ../vault-pw-dev.txt

ansible-playbook -i inventory/dev site.yml --skip-tags "service_restart,java_install" --limit "is_1" --extra-vars "ansible_ssh_pass=root ansible_ssh_user=root ansible_sudo_pass=root" --vault-id ../vault-pw-dev.txt

ansible-vault view inventory/dev/group_vars/all/secrets.yml --vault-id ../vault-pw-dev.txt

sshpass -p root ssh root@dev-1.is.matas.dk




docker run -p 3306:3306 --name dev-db --network is.matas.dk -e MYSQL_ROOT_PASSWORD=root -d mysql:8.0
sleep 10
docker exec dev-db rmdir dbscripts --ignore-fail-on-non-empty
docker exec dev-db mysql -u root --password=root -e "SET GLOBAL max_connections = 512;"
sleep 5
docker exec dev-db mkdir dbscripts
docker cp ~/work/wso2/matas/ansible-is-master/files/dbscripts/mysql.sql dev-db:/dbscripts/shared.sql
docker cp ~/work/wso2/matas/ansible-is-master/files/dbscripts//bps/bpel/create/mysql.sql dev-db:/dbscripts/bps.sql
docker cp ~/work/wso2/matas/ansible-is-master/files/dbscripts/identity/mysql.sql dev-db:/dbscripts/identity.sql
docker cp ~/work/wso2/matas/ansible-is-master/files/dbscripts/consent/mysql.sql dev-db:/dbscripts/consent.sql
docker exec dev-db mysql -u root --password=root -e "CREATE DATABASE WSO2SHARED_DB CHARACTER SET latin1 COLLATE latin1_general_cs;"
docker exec dev-db mysql -u root --password=root -e "CREATE DATABASE WSO2CONSENT_DB CHARACTER SET latin1 COLLATE latin1_general_cs;"
docker exec dev-db mysql -u root --password=root -e "CREATE DATABASE WSO2IDENTITY_DB CHARACTER SET latin1 COLLATE latin1_general_cs;"
docker exec dev-db mysql -u root --password=root -e "CREATE DATABASE WSO2BPS_DB CHARACTER SET latin1 COLLATE latin1_general_cs;"
docker exec dev-db mysql -u root --password=root -e "CREATE DATABASE MATAS CHARACTER SET latin1 COLLATE latin1_general_cs;"
sleep 10
docker exec dev-db mysql -u root --password=root --database=WSO2SHARED_DB -e "source /dbscripts/shared.sql"
docker exec dev-db mysql -u root --password=root --database=WSO2BPS_DB -e "source /dbscripts/bps.sql"
docker exec dev-db mysql -u root --password=root --database=WSO2CONSENT_DB -e "source /dbscripts/consent.sql"
docker exec dev-db mysql -u root --password=root --database=WSO2IDENTITY_DB -e "source /dbscripts/identity.sql"
sleep 3
docker exec dev-db mysql -u root --password=root --database=MATAS -e "source /dbscripts/shared.sql"
sleep 3
docker exec dev-db mysql -u root --password=root -e "CREATE USER 'wso2_shared_user'@'172.19.0.%' identified by '123456'"
docker exec dev-db mysql -u root --password=root -e "GRANT ALL ON WSO2SHARED_DB.* TO 'wso2_shared_user'@'172.19.0.%'"
docker exec dev-db mysql -u root --password=root -e "CREATE USER 'wso2_bps_user'@'172.19.0.%' identified by '123456'"
docker exec dev-db mysql -u root --password=root -e "GRANT ALL ON WSO2BPS_DB.* TO wso2_bps_user@'172.19.0.%'"
docker exec dev-db mysql -u root --password=root -e "CREATE USER 'wso2_identity_user'@'172.19.0.%' identified by '123456'"
docker exec dev-db mysql -u root --password=root -e "GRANT ALL ON WSO2IDENTITY_DB.* TO wso2_identity_user@'172.19.0.%'"
docker exec dev-db mysql -u root --password=root -e "CREATE USER 'wso2_consent_user'@'172.19.0.%' identified by '123456'"
docker exec dev-db mysql -u root --password=root -e "GRANT ALL ON WSO2CONSENT_DB.* TO wso2_consent_user@'172.19.0.%'"
sleep 3
docker exec dev-db mysql -u root --password=root -e "GRANT ALL ON MATAS.* TO 'wso2_shared_user'@'172.19.0.%'"
sleep 3
docker stop dev-1
docker rm dev-1





#build ubuntu_ssh template: docker build -t ubuntu_ssh

docker run -d --name dev --network is.matas.dk \
  --ip 172.19.0.3 ubuntu_ssh

#ssh to containers: ssh root@ip_address
#add ip and hostnames to /etc/hosts
sudo gedit /etc/hosts
sshpass -p root ssh root@dev.is.matas.dk



docker run -d -p 9443:9443 --name dev --network is.matas.dk \
  --ip 172.19.0.3 ubuntu_ssh




keytool -genkey -alias wso2carbon -keyalg RSA -keysize 2048 -keystore dev_wso2carbon.jks -dname "CN=dev.is.matas.dk, OU=IS,O=Matas,L=DK" -ext "SAN=localhost" -storepass wso2carbon -keypass wso2carbon
keytool -genkey -alias wso2carbon -keyalg RSA -keysize 2048 -keystore dev_wso2carbon.jks -dname "CN=dev.is.matas.dk, OU=IS,O=Matas,L=DK" -storepass wso2carbon -keypass wso2carbon
keytool -export -alias wso2carbon -keystore dev_wso2carbon.jks -storepass wso2carbon -file dev_wso2carbon.pem
keytool -import -alias dev -file dev_wso2carbon.pem -keystore client-truststore.jks -storepass wso2carbon


https://dev-1.is.matas.dk:9443/console/login
docker run -d --name dev-api02 --network jysk.netic.dk \
--add-host apps.dev.api.jysk.com:172.19.0.6 \
--add-host apps32.dev.api.jysk.com:172.19.0.6 \
--add-host dashboard.dev.api.jysk.com:172.19.0.6 \
 --ip 172.19.0.4 ubuntu_ssh

docker stop lb-dev
docker rm lb-dev

docker run -d --name lb-dev --network jysk.netic.dk \
 -v ~/work/wso2/jysk/apim320/lb-dev.crt:/etc/nginx/ssl/dev-ssl.crt \
 -v ~/work/wso2/jysk/apim320/lb-dev.key:/etc/nginx/ssl/dev-ssl.key \
 -v ~/work/wso2/jysk/apim320/nginx_32_dev.conf:/etc/nginx/conf.d/http.conf \
 --ip 172.19.0.6 nginx


#ssh to containers: ssh root@ip_address
#add ip and hostnames to /etc/host
sshpass -p root ssh root@dev-api01.jysk.netic.dk
sshpass -p root ssh root@dev-api02.jysk.netic.dk


keytool -keystore ~/work/wso2/jysk/apim320/git/ansible-jysk-apim/files/security/wso2am/dev/client-truststore.jks -storepass wso2carbon -import -alias lb-dev -file ~/work/wso2/jysk/apim320/lb-dev.crt -noprompt
keytool -keystore ~/work/wso2/jysk/apim320/git/ansible-jysk-apim/files/security/wso2am-analytics/dev/client-truststore.jks -storepass wso2carbon -import -alias lb-dev -file ~/work/wso2/jysk/apim320/lb-dev.crt -noprompt

ansible-playbook -i inventory/dev site.yml --skip-tags "service_restart" --limit "ad1" --extra-vars "ansible_ssh_pass=root ansible_ssh_user=root ansible_sudo_pass=root" --vault-id ../password-dev.txt
ansible-playbook -i inventory/dev site.yml --skip-tags "service_restart" --limit "aw1" --extra-vars "ansible_ssh_pass=root ansible_ssh_user=root ansible_sudo_pass=root" --vault-id ../password-dev.txt
ansible-playbook -i inventory/dev site.yml --skip-tags "service_restart" --limit "wso2apim" --extra-vars "ansible_ssh_pass=root ansible_ssh_user=root ansible_sudo_pass=root" --vault-id ../password-dev.txt


gnome-terminal -- /bin/sh -c 'docker exec dev-api02 "/data/wso2/aw1/wso2am-analytics-3.2.0/bin/worker.sh"'
gnome-terminal -- /bin/sh -c 'docker exec dev-api02 "/data/wso2/ad1/wso2am-analytics-3.2.0/wso2/dashboard/bin/carbon.sh"'
gnome-terminal -- /bin/sh -c 'docker exec dev-api01 "/data/wso2/wso2apim/wso2am-3.2.0/bin/wso2server.sh"'


src_apim_wum_pack: ~/.wum3/products/wso2am/{{ product_version }}/full/wso2am-{{ product_version }}+{{ apim_wum_version }}.full.zip
src_analytics_wum_pack: ~/.wum3/products/wso2am-analytics/{{ product_version }}/full/wso2am-analytics-{{ product_version }}+{{ analytics_wum_version }}.full.zip

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -






ansible-playbook -i dev --skip-tags "service_cycle" site.yml --limit "apim-analytics-worker_1" --extra-vars "ansible_ssh_pass=root ansible_ssh_user=root ansible_sudo_pass=root"
ansible-playbook -i dev --skip-tags "service_cycle" site.yml --limit "apim-analytics-dashboard_1" --extra-vars "ansible_ssh_pass=root ansible_ssh_user=root ansible_sudo_pass=root"
ansible-playbook -i dev --skip-tags "service_cycle" site.yml --limit "apim_1" --extra-vars "ansible_ssh_pass=root ansible_ssh_user=root ansible_sudo_pass=root"

docker start dev-db01-api
sleep 5
docker exec dev-db01-api mysql -u root --password=root -e "SET GLOBAL max_connections = 512;"
docker start dev-api01
docker start dev-api02
docker start lb-km-dev
docker start lb-gw-dev
docker start lb-ps-dev
docker start lb-an-dev
